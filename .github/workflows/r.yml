# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: R
env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
on:
  push:
    branches: 
      - "*"
  pull_request:
    branches: 
      - "*" 

jobs:
  build:
    runs-on: ubuntu-latest
        # Service containers to run with `runner-job`
    defaults:
      run:
        shell: bash
        working-directory: uzhOS
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: shiny
          POSTGRES_DB: oa
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    strategy:
      matrix:
        r-version: [4.0]

    steps:
      - uses: actions/checkout@v2
      - name: copy odbc.ini to /etc
        run: sudo cp tests/Github_Actions_Setup/odbc.ini /etc
      - name: install dependencies
        run: sudo bash tests/Github_Actions_Setup/install_system_dependencies.sh
      - name: copy odbcinst
        run: sudo cp tests/Github_Actions_Setup/odbcinst.ini /etc
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@ffe45a39586f073cc2e9af79c4ba563b657dc6e3
        with:
          r-version: ${{ matrix.r-version }}
      - name: Install dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_deps(dependencies = NA)
          remotes::install_github("krassowski/complex-upset")
          remotes::install_github("RinteRface/shinydashboardPlus")
        shell: Rscript {0}
      - name: Connect to PostgreSQL
        # Runs a script that creates a PostgreSQL client, populates
        # the client with data, and retrieves data
        run: Rscript tests/Github_Actions_Setup/initialize_db.R
      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}
